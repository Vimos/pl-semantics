#!/bin/bash

export CANDCHOME=candc/bin
#export ALCHEMYHOME=alchemy/bin
export WORDNETHOME=resources/wordnet

SBT="java -Dfile.encoding=UTF8 -Xdebug -Xmx1536M -Xss1M -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m -jar bin/sbt-launch-*.jar"
START="target/start"
RES="resources"

CMD=$1  #compile, boxer, run, box, lem, vs, gen, all
shift

case $CMD in
  compile)
	$SBT add-start-script-tasks start-script
	exit 0
   ;;
  boxer)
	$START utcompling.mlnsemantics.run.BoxerCli "$@"
	exit 0
   ;;
  console)
    $SBT console
    exit 0
   ;;
  run-condor)
   step=$1
   shift
   index=$1
   shift
	;;
esac


#CMD is not compile nor boxer
#CMD = run, box, lem, vs, gen, all

DS=$1	#prb, vid, par, frc, rte
shift

case $DS in
  prb) dsPath="$RES/prob/prob" ;;
  vid) dsPath="$RES/sts/STS.MSRvid" ;;
  par) dsPath="$RES/sts/STS.MSRpar" ;;
  frc) dsPath="$RES/fracas/fracas" ;;
  sick-rte) dsPath="$RES/sick/sick-rte" ;;
  sick-sts) dsPath="$RES/sick/sick-sts" ;;
  rte) 
	rte_ver=$1	#rte 1, 2, 3, 4, 5, 6, 7
	shift

#	rte_mode=$1    #test or train
#	shift

	dsPath="$RES/rte$rte_ver/RTE$rte_ver" #.$rte_mode"
  ;;
  *) 
    echo "$DS is a wrong dataset"
    exit 1
  ;;
esac

txt="$dsPath.txt"
box="$dsPath.box"
lem="$dsPath.lem"
vs="$dsPath.vs"
gs="$dsPath.gs"
out="$dsPath.out"
rowsCnt=$(wc -l "$txt" | awk  '{print $1}')

if [ "$CMD" == "all" ] || [ "$CMD" == "gen" ] || [ "$CMD" == "box" ]; then
	echo "Start parsing"
	$START utcompling.mlnsemantics.run.Sts box $txt $box "$@"
	echo "Done parsing"
fi

if [ "$CMD" == "all" ] || [ "$CMD" == "gen" ] || [ "$CMD" == "lem" ]; then
	echo "Start lemmatization"
	$START utcompling.mlnsemantics.run.Sts lem $txt $lem "$@"
	echo "Done lemmatization"
fi

if [ "$CMD" == "all" ] || [ "$CMD" == "gen" ] || [ "$CMD" == "vs" ]; then
	echo "Start extracting vector space"
	$START utcompling.mlnsemantics.run.Sts vs $lem $vs "$@"
	echo "Done extracting vector space"
fi

if [ "$CMD" == "all" ] || [ "$CMD" == "run" ]; then
	$START utcompling.mlnsemantics.run.Sts run $txt $box $lem $vs $gs $out "$@"
fi

if [ "$CMD" == "run-condor" ]; then
	rngTo=$(( $step * index ))
   rngFrom=$(( $index - 1 ))
	rngFrom=$(( $rngFrom * $step + 1))
	if [ "$rngFrom" -gt "$rowsCnt" ]; then
   	echo "range $rngFrom-$rngTo beyond dataset size"
	   exit 1
	fi
   ./bin/condorizer.py $START utcompling.mlnsemantics.run.Sts run $txt $box $lem $vs $gs $out $rngFrom-$rngTo "$@"
fi

exit 0
