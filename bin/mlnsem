#!/bin/bash

export CANDCHOME=candc/bin
export ALCHEMYHOME=alchemy/bin
export WORDNETHOME=resources/wordnet

SBT="java -Dfile.encoding=UTF8 -Xdebug -Xmx1536M -Xss1M -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m -jar bin/sbt-launch-*.jar"
START="target/start"
RES="resources"

CMD=$1  #compile, boxer, run, box, lem, vs, gen, all
shift

case $CMD in
  compile)
	$SBT add-start-script-tasks start-script
	exit 0
   ;;
  boxer)
	$START utcompling.mlnsemantics.run.BoxerCli "$@"
	exit 0
   ;;
  console)
    $SBT console
    exit 0
   ;;
esac

#CMD is not compile nor boxer
#CMD = run, box, lem, vs, gen, all

DS=$1	#prb, vid, par, frc, rte
shift

case $DS in
  prb) dsPath="$RES/prob/prob" ;;
  vid) dsPath="$RES/sts/STS.MSRvid" ;;
  par) dsPath="$RES/sts/STS.MSRpar" ;;
  frc) dsPath="$RES/fracas/fracas" ;;
  sick-rte) dsPath="$RES/sick/sick-rte" ;;
  sick-sts) dsPath="$RES/sick/sick-sts" ;;
  rte) 
	rte_ver=$1	#rte 1, 2, 3, 4, 5, 6, 7
	shift

#	rte_mode=$1    #test or train
#	shift

	dsPath="$RES/rte$rte_ver/RTE$rte_ver" #.$rte_mode"
  ;;
esac

txt="$dsPath.txt"
box="$dsPath.box"
lem="$dsPath.lem"
vs="$dsPath.vs"
gs="$dsPath.gs"
out="$dsPath.out"


if [ "$CMD" == "all" ] || [ "$CMD" == "gen" ] || [ "$CMD" == "box" ]; then
	echo "Start parsing"
	$START utcompling.mlnsemantics.run.Sts box $txt $box "$@"
	echo "Done parsing"
fi

if [ "$CMD" == "all" ] || [ "$CMD" == "gen" ] || [ "$CMD" == "lem" ]; then
	echo "Start lemmatization"
	$START utcompling.mlnsemantics.run.Sts lem $txt $lem "$@"
	echo "Done lemmatization"
fi

if [ "$CMD" == "all" ] || [ "$CMD" == "gen" ] || [ "$CMD" == "vs" ]; then
	echo "Start extracting vector space"
	$START utcompling.mlnsemantics.run.Sts vs $RES/full.vs $lem $vs "$@"
	echo "Done extracting vector space"
fi

if [ "$CMD" == "all" ] || [ "$CMD" == "run" ]; then
	$START utcompling.mlnsemantics.run.Sts run $txt $box $lem $vs $gs $out "$@"
fi

#  vs-pos)
#        $START utcompling.mlnsemantics.run.Sts vs /scratch/cluster/beltagy/deft/CORE_SS.bnc-ukwac-wacky.min50.10K.ppmi.svd_500.dan $RES/sts/prob.in.lem $RES/sts/prob.in.vs.pos "$@"
#	$START utcompling.mlnsemantics.run.Sts vs /scratch/cluster/beltagy/deft/CORE_SS.bnc-ukwac-wacky.min50.10K.ppmi.svd_500.dan $RES/sts/msrParFull.in.lem $RES/sts/msrParFull.in.vs.pos "$@"
#	$START utcompling.mlnsemantics.run.Sts vs /scratch/cluster/beltagy/deft/CORE_SS.bnc-ukwac-wacky.min50.10K.ppmi.svd_500.dan $RES/sts/STS.MSRvid.in.lem $RES/sts/STS.MSRvid.in.vs.pos "$@"
#	$START utcompling.mlnsemantics.run.Sts vs /scratch/cluster/beltagy/deft/CORE_SS.bnc-ukwac-wacky.min50.10K.ppmi.svd_500.dan $RES/sts/STS.MSRpar.in.lem $RES/sts/STS.MSRpar.in.vs.pos "$@"


#rte )
#	$START utcompling.mlnsemantics.run.Sts run $RES/rte/RTE$version.$rtemode.txt $RES/rte/RTE$version.$rtemode.box $RES/rte/RTE$version.$rtemode.lem $RES/rte/RTE$version.$rtemode.vs $RES/rte/RTE$version.$rtemode.gs $RES/rte/RTE$version.$rtemode.out -kbest 1 -task rte -vectorMaker add -rules $RES/rte/rules -multiOut $RES/sts/multiOut-$rtemode/RTE$version.$rtemode.multiOut "$@"

# run-trento)
#	$START utcompling.mlnsemantics.run.Sts run $RES/sts/P.txt $RES/sts/P.box $RES/sts/P.lem $RES/sts/P.vs $RES/sts/P.gs $RES/sts/P.out -kbest 1 -task sts -vectorMaker add -phrases $RES/sts/phrases/phrases.lst -phraseVecs $RES/sts/phrases/word_phrase_sentence_ppmi_$reducedSpace.dm -multiOut $RES/sts/multiOut-test-P/$reducedSpace/tmp.multiOut "$@"
#	$START utcompling.mlnsemantics.run.Sts run $RES/sts/Prev.txt $RES/sts/Prev.box $RES/sts/Prev.lem $RES/sts/Prev.vs $RES/sts/Prev.gs $RES/sts/Prev.out -kbest 1 -task sts -vectorMaker add -phrases $RES/sts/phrases/phrases.lst -phraseVecs $RES/sts/phrases/word_phrase_sentence_ppmi_$reducedSpace.dm -multiOut $RES/sts/multiOut-test-Prev/$reducedSpace/tmp.multiOut "$@"
#
#	$START utcompling.mlnsemantics.run.Sts run $RES/sts/P-S.txt $RES/sts/P-S.box $RES/sts/P-S.lem $RES/sts/P-S.vs $RES/sts/P-S.gs $RES/sts/P-S.out -kbest 1 -task sts -vectorMaker add -phrases $RES/sts/phrases/phrases.lst -phraseVecs $RES/sts/phrases/word_phrase_sentence_ppmi_$reducedSpace.dm -multiOut $RES/sts/multiOut-test-P-S/$reducedSpace/tmp.multiOut "$@"
#	$START utcompling.mlnsemantics.run.Sts run $RES/sts/P-Srev.txt $RES/sts/P-Srev.box $RES/sts/P-Srev.lem $RES/sts/P-Srev.vs $RES/sts/P-Srev.gs $RES/sts/P-Srev.out -kbest 1 -task sts -vectorMaker add -phrases $RES/sts/phrases/phrases.lst -phraseVecs $RES/sts/phrases/word_phrase_sentence_ppmi_$reducedSpace.dm -multiOut $RES/sts/multiOut-test-P-Srev/$reducedSpace/tmp.multiOut "$@"
#
#	$START utcompling.mlnsemantics.run.Sts run $RES/sts/P-SD.txt $RES/sts/P-SD.box $RES/sts/P-SD.lem $RES/sts/P-SD.vs $RES/sts/P-SD.gs $RES/sts/P-SD.out -kbest 1 -task sts -vectorMaker add -phrases $RES/sts/phrases/phrases.lst -phraseVecs $RES/sts/phrases/word_phrase_sentence_ppmi_$reducedSpace.dm -multiOut $RES/sts/multiOut-test-P-SD/$reducedSpace/tmp.multiOut "$@"
#	$START utcompling.mlnsemantics.run.Sts run $RES/sts/P-SDrev.txt $RES/sts/P-SDrev.box $RES/sts/P-SDrev.lem $RES/sts/P-SDrev.vs $RES/sts/P-SDrev.gs $RES/sts/P-SDrev.out -kbest 1 -task sts -vectorMaker add -phrases $RES/sts/phrases/phrases.lst -phraseVecs $RES/sts/phrases/word_phrase_sentence_ppmi_$reducedSpace.dm -multiOut $RES/sts/multiOut-test-P-SDrev/$reducedSpace/tmp.multiOut "$@"
#	$START utcompling.mlnsemantics.run.Sts run $RES/sts/RTE$version.test.txt $RES/sts/RTE$version.test.box $RES/sts/RTE$version.test.lem $RES/sts/RTE$version.test.vs $RES/sts/RTE$version.test.gs $RES/sts/RTE$version.test.out -kbest 1 -task rte -vectorMaker add -multiOut $RES/sts/RTE$version.test.multiOut "$@"
#	;;

exit 0
