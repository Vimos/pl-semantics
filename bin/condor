#!/bin/bash
#This script should be called from the folder: mln-semantic using the command bin/condor
CMD=$1

# full is just some shortcut
if [ "$CMD" == "full" ]; then
	shift
	bash $0 "submit" $@
	bash $0 "collect" $@
	bash $0 "eval" $@
	exit 0
fi

case $CMD in
	status)
		shift
		/lusr/opt/condor/bin/condor_q "$@"
		exit 0
		;;
	remove)
		/lusr/opt/condor/bin/condor_rm -all
		exit 0
		;;
esac

expDir=$2
if [ -z "$expDir" ]; then
	echo "Experiment directory can not be empty"
	exit 1
fi

outputDir="$expDir/"

case $CMD in
	submit | print)
		step=$3
		if [ -z "$step" ] || [ "$step" -le "0" ]; then
			echo "step can not be zero or empty"
			exit 1
		fi

		DS=$4
		case $DS in
			vid)
				dsSize=1500 
				task=sts
				gs="resources/sts/STS.MSRvid.gs"
				;;
			par) 
				dsSize=1500
				task=sts
				gs="resources/sts/STS.MSRpar.gs"
				;;
			sick-rte)
				dsSize=5000
				task=rte
				gs="resources/sick/sick-rte.gs"
				;;
			sick-sts) 
				dsSize=5000
				task=sts
				gs="resources/sick/sick-sts.gs"
				;;
			sick-rte-test) 
				dsSize=4927
				task=rte
				gs="resources/sick/sick-test-rte.gs"
				DS=sick-test
				;;
			sick-sts-test) 
				dsSize=4927
				task=sts
				gs="resources/sick/sick-test-sts.gs"
				DS=sick-test
				;;
			rte1)
				dsSize=1367
				task=rte
				gs="resources/rte1/RTE1.gs"
				DS="rte 1"
				;;
			qa)
				qDir=$5
				shift
				task=rte
				DS="qa "$qDir
				dsSize=$(ls -all $qDir | grep question | wc -l)
				echo "Dataset: "$DS
				echo "Dataset size: "$dsSize	
				;;
			*)
				echo "$DS dataset is not supported"
				exit 1
			;;
		esac
		total=$(( $dsSize+$step-1 ))
		total=$(( $total / $step ))
		#echo "Number of jobs $total" >&2
		shift #CMD
		shift #outputDir
		shift #step
		shift #DS
		args=" $DS -task $task $@"
		
		if [ "$CMD" == "submit" ]; then
			rm $outputDir -r
			mkdir $outputDir
			echo  $step  > $outputDir/config
			echo  $total >> $outputDir/config
			echo  $gs >> $outputDir/config
			echo  $task >> $outputDir/config
			echo "$args" >> $outputDir/config
		fi
		;;
	fix | collect | eval)
		step=$(head -n 1 $outputDir/config)
		total=$(head -n 2 $outputDir/config| tail -n 1)
		gs=$(head -n 3 $outputDir/config| tail -n 1)
		task=$(head -n 4 $outputDir/config| tail -n 1)
		args=$(tail  -n 1 $outputDir/config)
		echo "step: $step"
		echo "total: $total"
		echo "args: $args"
		;;
	*)
		echo $CMD
		;;
esac


export collectBuffer=""
errorCnt=0
if [ "$CMD" == "collect" ]; then
	echo -n > $outputDir/result
fi

for (( i=1; i<=$total; i++ ))
do
	outputFile=$outputDir/out.$(( $i - 1 ))
	case $CMD in
	print | submit)
		echo "bin/mlnsem run-condor $step $i $args"
		;;
	collect)
		b="$(grep '^\[' $outputFile | head -n1 | tr '][ ' '  \n')"
		echo "$b" >> $outputDir/result
		;;
	eval)
		break
		;;
	esac
done | case $CMD in
	submit)
		mkdir -p $outputDir
		condargs --no-zero-pad -n $DS \
			-o $outputDir \
			--wait \
			bash
		rm -f /scratch/cluster/roller/rtesystem/pl-semantics/tmp-*
		;;
	*)
		cat -
		;;
esac

case $CMD in 
	fix)
		echo "Errors resubmitted: $errorCnt"
		;;
	eval)
		if [ "$task" == "rte" ]; then
			echo "Running Posthoc Classifier"
			echo "--------------------------------------------------"
			python bin/classifier.py --train $outputDir/result --gold-train $gs
			echo "--------------------------------------------------"
		else
			echo "No longer implemented."
			#tail -n 1 $outputDir/result | bin/weka.sh regress $gs
		fi
		;;
esac


exit 0
