
:- module(output,[printHeader/4,
                  printFooter/1,
                  printSem/4,
                  printBox/2]).

:- use_module(boxer(xdrs2xml),[xfdrs2xml/2,xdrs2xml/2]).
:- use_module(boxer(xdrs2html),[xfdrs2html/2,xdrs2html/2]).
:- use_module(boxer(drs2fdrs),[drs2fdrs/2,instDrs/1,instDrs/2]).
:- use_module(boxer(printDrs),[printDrs/3]).
:- use_module(boxer(tuples),[drs2owl/2,write_rdf/2,dot_rdf/2,drs2rdf/2,
                             tuples/4,write_tuples/2,trees/2,write_trees/2]).

:- use_module(semlib(drs2tex),[drs2tex/2]).
:- use_module(semlib(drs2fol),[drs2fol/2]).
:- use_module(semlib(drs2tacitus),[drs2tac/4,printTAC/2]).
:- use_module(semlib(options),[option/2]).
:- use_module(semlib(errors),[warning/2]).

:- use_module(library(lists),[member/2,append/3]).

/* ------------------------------------------------------------------------
   Options
------------------------------------------------------------------------ */

printOptions([],Stream):- !, 
   nl(Stream).

printOptions([X|L],Stream):- 
   write(Stream,X), tab(Stream,1),
   printOptions(L,Stream).

 
/* ------------------------------------------------------------------------
   Print header: --format no
------------------------------------------------------------------------ */

printHeader(_,_,_,_):-
   option('--format',no), !.

/* ------------------------------------------------------------------------
   Print header: --format prolog
------------------------------------------------------------------------ */

printHeader(Stream,_,Command,Options):-
   option('--format',prolog), !,
   format(Stream,'%%% This output was generated by the following command:~n',[]),
   format(Stream,'%%% ~p ',[Command]),
   printOptions(Options,Stream),
   ( option('--semantics',drs), !,
     format(Stream,'~n:- multifile     sem/5, id/2.',[]),
     format(Stream,'~n:- discontiguous sem/5, id/2.',[]),
     format(Stream,'~n:- dynamic       sem/5, id/2.~n',[])
   ; true ).

/* ------------------------------------------------------------------------
   Print header: --format latex
------------------------------------------------------------------------ */

printHeader(Stream,_,_,_):-
   option('--format',latex), !,
   write(Stream,'\\documentclass[10pt]{article}'), nl(Stream),
   nl(Stream),
   write(Stream,'\\usepackage{a4wide}'),           nl(Stream),
   nl(Stream),
   write(Stream,'\\newcommand{\\drs}[2]'),         nl(Stream),
   write(Stream,'{'),                              nl(Stream),
   write(Stream,'   \\begin{tabular}{|l|}'),       nl(Stream),
   write(Stream,'   \\hline'),                     nl(Stream),
   write(Stream,'   #1'),                          nl(Stream),
   write(Stream,'   \\\\'),                        nl(Stream),
   write(Stream,'   ~ \\vspace{-2ex} \\\\'),       nl(Stream),
   write(Stream,'   \\hline'),                     nl(Stream),
   write(Stream,'   ~ \\vspace{-2ex} \\\\'),       nl(Stream),
   write(Stream,'   #2'),                          nl(Stream),
   write(Stream,'   \\\\'),                        nl(Stream),
   write(Stream,'   \\hline'),                     nl(Stream),
   write(Stream,'   \\end{tabular}'),              nl(Stream),
   write(Stream,'}'),                              nl(Stream),
   nl(Stream),
   write(Stream,'\\parindent 0pt'),                nl(Stream),
   write(Stream,'\\parskip 10pt'),                  nl(Stream),
   nl(Stream),
   write(Stream,'\\begin{document}'),              nl(Stream),
   write(Stream,'\\sf \\tiny'),                    nl(Stream),
   nl(Stream).

/* ------------------------------------------------------------------------
   Print header: --format dot
------------------------------------------------------------------------ */

printHeader(_,_,_,_):-
   option('--format',dot), !.

/* ------------------------------------------------------------------------
   Print header: --format xml
------------------------------------------------------------------------ */

printHeader(Stream,Version,_,_):-
   option('--format',xml), 
   option('--flat',true), !,
   format(Stream,'<?xml version="1.0" encoding="UTF-8"?>~n',[]),
   format(Stream,'<!DOCTYPE xfdrs-output SYSTEM "src/data/boxer/xfdrs.dtd">~n',[]),
   user:version(Version),
   format(Stream,'<xfdrs-output version="~p">~n',[Version]).

printHeader(Stream,Version,_,_):-
   option('--format',xml), 
   option('--flat',false), !,
   format(Stream,'<?xml version="1.0" encoding="UTF-8"?>~n',[]),
   format(Stream,'<!DOCTYPE xdrs-output SYSTEM "src/data/boxer/xdrs.dtd">~n',[]),
   format(Stream,'<xdrs-output version="~p">~n',[Version]).

/* ------------------------------------------------------------------------
   Print header: --format html
------------------------------------------------------------------------ */

printHeader(Stream,_Version,_,_):-
   option('--format',html), !,
   format(Stream,'<html>~n',[]),
   format(Stream,' <head>~n',[]),
   format(Stream,'  <link rel="stylesheet" type="text/css" media="screen" href="src/data/boxer/drs.css" />~n',[]),
   format(Stream,' </head>~n',[]),
   format(Stream,' <body>~n',[]).


/* ------------------------------------------------------------------------
   Print header: failed, generate warning
------------------------------------------------------------------------ */

printHeader(_,_,_,_):-
   option('--format',Format), 
   option('--semantics',Semantics), 
   option('--flat',RDF), 
   warning('unable to output header for --semantics ~p --format ~p --flat ~p',[Semantics,Format,RDF]).


/* ------------------------------------------------------------------------
   Print footer
------------------------------------------------------------------------ */

printFooter(Stream):-
   option('--format',html), 
   format(Stream,' </body>~n',[]),
   format(Stream,'</html>~n',[]).

printFooter(Stream):-
   option('--format',xml), 
   ( option('--flat',true), !,
     format(Stream,'</xfdrs-output>~n',[])
   ; format(Stream,'</xdrs-output>~n',[]) ).

printFooter(Stream):-
   option('--format',latex), !,
   format(Stream,'\\end{document}~n',[]).

printFooter(_).


/* ========================================================================
   Print Utterance +  Semantic Representation
======================================================================== */

printSem(Stream,_,_,XDRS):-
   option('--format',no), !,
   XDRS = xdrs(Words,_,_,DRS),
   instantiateDrs(DRS),
   printUtterance(Stream,Words).

printSem(Stream,Id,Index,XDRS):-
   XDRS = xdrs(Words,_,_,_),
   printUtterance(Stream,Words),
   %%% printBox(....),    %%% really belongs here, now in boxer.pl
   printXDRS(Stream,Id,Index,XDRS).


/* ========================================================================
   Print XDRS
======================================================================== */

printXDRS(Stream,Id,Index,XDRS):-
   option('--semantics',drs),
   option('--format',prolog), !,
   XDRS = xdrs(Words,POS,NE,DRS),
   format(Stream,'id(~q,~p).~n',[Id,Index]),
   format(Stream,'sem(~p,',[Index]),
   printStuff(Words,Stream,','),
   printStuff(POS,Stream,','),
   printStuff(NE,Stream,','),
   instantiateDrs(DRS),
   flattenDrs(DRS,DRS0),
   printStuff(DRS0,Stream,' ).'),
   nl(Stream).

printXDRS(Stream,Id,_Index,XDRS):-
   option('--semantics',drs),
   option('--format',xml), !,
   instantiateDrs(XDRS),  
   ( option('--flat',true), !, 
     format(Stream,'<xfdrs xml:id="~p">~n',[Id]),
     flattenDrs(XDRS,XFDRS),
     xfdrs2xml(XFDRS,Stream),
     format(Stream,'</xfdrs>~n',[])
   ; format(Stream,'<xdrs xml:id="~p">~n',[Id]),
     xdrs2xml(XDRS,Stream),
     format(Stream,'</xdrs>~n',[]) ).

printXDRS(Stream,_Id,_Index,XDRS):-
   option('--semantics',drs),
   option('--format',html), !,
   instantiateDrs(XDRS),  
   xdrs2html(XDRS,Stream).

printXDRS(Stream,_Id,_Index,XDRS):-
   option('--semantics',drs), 
   option('--format',latex), !,  
   XDRS = xdrs(_Words,_POS,_NE,DRS),
   instantiateDrs(DRS),
   drs2tex(DRS,Stream),
   nl(Stream), nl(Stream).

printXDRS(Stream,_Id,_Index,XDRS):-
   option('--semantics',owl), !,
   XDRS = xdrs(Words,_POS,_NE,DRS),
   instantiateDrs(DRS),
   drs2owl(DRS,RDF),
   printRDF(Stream,Words,RDF).

printXDRS(Stream,_Id,_Index,XDRS):-
   option('--semantics',tuple), !,   
   XDRS = xdrs(Words,_POS,_NE,DRS),
   instDrs(DRS,N),
   tuples(Words,DRS,N,Tuples),
   write_tuples(Tuples,Stream),
   nl(Stream).

printXDRS(Stream,_Id,_Index,XDRS):-
   option('--semantics',tree), !,   
   XDRS = xdrs(_Words,_POS,_NE,DRS),
   trees(DRS,Trees),
   write_trees(Trees,Stream),
   nl(Stream).

printXDRS(Stream,_Id,_Index,XDRS):-
   option('--semantics',fol), !,
   XDRS = xdrs(_Words,_POS,_NE,DRS),
   drs2fol(DRS,FOL),
   write(Stream,'fol('), write(Stream,FOL), 
   write(Stream,').'), nl(Stream).

printXDRS(Stream,Id,Index,XDRS):-
   option('--semantics',tacitus), !,
   format(Stream,'id(~q,~p).~n',[Id,Index]),
   XDRS = xdrs(_Words,POS,_NE,DRS),
   instDrs(DRS,N),
   drs2tac(DRS,POS,N,TAC),
   printTAC(TAC,Stream).

printXDRS(_,_,_,_):-
   option('--format',Format), 
   option('--semantics',Semantics), 
   option('--flat',RDF), 
   warning('unable to output XDRS for --semantics ~p --format ~p --flat ~p',[Semantics,Format,RDF]).


/*========================================================================
   Print RDF
========================================================================*/

printRDF(Stream,Words,RDF):-
   option('--format',dot), !,   
   write(Stream,'digraph rdf {'), nl(Stream), nl(Stream),
   write(Stream,'     100000 [label=" '), 
   printWords(Words,Stream), write(Stream,'" shape=box];'), 
   nl(Stream), nl(Stream),
   dot_rdf(RDF,Stream).

printRDF(Stream,_Words,RDF):-
   option('--format',xml), !,
   write_rdf(RDF,Stream),
   nl(Stream).

printRDF(Stream,Words,rdf(Nodes,Edges,_)):-
   option('--format',prolog), !,
   write(Stream,'rdf('),
   printStuff(Words,Stream,','),
   printStuff(Nodes,Stream,','),
   printStuff(Edges,Stream,').'),
   nl(Stream).

printRDF(_,_,_):-
   option('--format',Format),
   warning('--format ~p not supported for printing RDF',[Format]).

/*========================================================================
   Print Box
========================================================================*/

printBox(Stream,XDRS):-
   option('--box',true), 
   option('--format',xml), !,
   format(Stream,'~n<!-- ~n',[]),
   leftMargin(Margin),
   printDrs(Stream,XDRS,Margin),
   format(Stream,'--> ~n~n',[]).

printBox(Stream,XDRS):-
   option('--box',true), !,
   leftMargin(Margin),
   printDrs(Stream,XDRS,Margin).

printBox(_,_).


/* ========================================================================
   Left Margin (for DRS printing)
======================================================================== */

leftMargin(Margin):- option('--format',prolog), !, Margin = '%%% '.
leftMargin(Margin):- option('--format',latex),  !, Margin = '%%% '.
leftMargin(Margin):- option('--format',dot),    !, Margin = '# '.
leftMargin(Margin):- Margin = ''.


/*========================================================================
   Print Utterance
========================================================================*/

printUtterance(Stream,Words):-
   option('--format',prolog), !,
   format(Stream,'%%% ',[]),
   printWords(Words,Stream),
   nl(Stream).

printUtterance(Stream,Words):-
   option('--format',latex), !,
   write(Stream,'\\section*{'),
   printWords(Words,Stream),
   write(Stream,'}'), nl(Stream).

printUtterance(Stream,Words):-
   option('--format',dot), !,
   format(Stream,'# ',[]),
   printWords(Words,Stream),
   nl(Stream).

printUtterance(Stream,Words):-
   option('--format',xml), !,
   format(Stream,'<!-- ',[]),
   printWords(Words,Stream),
   format(Stream,'--> ~n~n',[]).

printUtterance(Stream,Words):-
   option('--format',html), !,
   format(Stream,'<p>',[]),
   printWords(Words,Stream),
   format(Stream,'</p>~n',[]).

printUtterance(Stream,Words):-
   option('--format',no), !,
   printWords(Words,Stream),
   nl(Stream).


/*========================================================================
   Print Words
========================================================================*/

printWords([],_):- !.

printWords([word(_,Word)|L],Stream):-
   option('--format',xml), 
   atom(Word),
   atom_chars(Word,Chars), 
   append(_,['-','-'|_],Chars), !,
   printWords(L,Stream).

printWords([word(_,Word)|L],Stream):- !,
   format(Stream,'~w ',[Word]),
   printWords(L,Stream).


/*========================================================================
   Print XDRS stuff flattened
========================================================================*/

printFlat([],Stream):- !,
   format(Stream,'    ]',[]).

printFlat([X],Stream):- !,
   format(Stream,'     ',[]),
   write_term(Stream,X,[numbervars(true),quoted(true)]),
   format(Stream,'~n    ]',[]).

printFlat([X|L],Stream):-
   format(Stream,'     ',[]),
   write_term(Stream,X,[numbervars(true),quoted(true)]),
   format(Stream,',~n',[]),
   printFlat(L,Stream).


/*========================================================================
   Instantiate DRS 
========================================================================*/

instantiateDrs(xdrs(_,_,_,DRS)):-
   option('--instantiate',true), !,
   instDrs(DRS).

instantiateDrs(DRS):-
   option('--instantiate',true), !,
   instDrs(DRS).

instantiateDrs(DRS):-
   numbervars(DRS,0,_).


/*========================================================================
   Flatten DRS 
========================================================================*/

flattenDrs(xdrs(A,B,C,DRS),xdrs(A,B,C,FDRS)):-
   option('--flat',true), !,
   drs2fdrs(DRS,FDRS).

flattenDrs(DRS,FDRS):-
   option('--flat',true), !,
   drs2fdrs(DRS,FDRS).

flattenDrs(DRS,DRS).


/*========================================================================
   Print Stuff
========================================================================*/

printStuff(Stuff,Stream,Closing):-
   option('--flat',true), !,
   nl(Stream),
   format(Stream,'    [~n',[]),
   printFlat(Stuff,Stream),
   format(Stream,'~p',[Closing]).

printStuff(Stuff,Stream,Closing):-
   format(Stream,'~n    ',[]),
   write_term(Stream,Stuff,[numbervars(true),quoted(true)]),
   format(Stream,'~p',[Closing]).

